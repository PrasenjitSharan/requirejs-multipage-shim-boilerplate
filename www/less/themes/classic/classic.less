//------------------
// CLASSIC CSS THEME
//------------------
// 
// What's happening here?
// 
// This file is the primary LESS file for the "Classic" theme. It starts with the
// core Bootstrap library and applies the local variables.less and overrides.less
// rules to customize the Bootstrap appearance for this instance.
//
// All rules and additional imports in this file are specific to the theme and the
// appearance of non-Bootstrap components of the site. Any global, Bootstrap-specific,
// overrides should be applied within overrides.less.
//
// NOTE: Any time it is necessary to use the #gridSystem mixin AFTER the responsive
// imports have been made, the system MUST be primed for the necessary dimensions.
// For example, to set the width of the .navbar on large desktops > 1200px, we must
// call #grid > .core() before assigning a responsive width so that the grid column
// calculations will be updated to the necessary dimensions, since they are reset
// by each Bootstrap responsive import -- regardless of whether the media query is
// applicable or not.
//


// GLOBAL IMPORTS
// -------------------------

// Bootstrap Base
@import "../../base.less";

// DataTables Components
@import "datatables.less";

// Bootstrap Variables
@import "variables.less";

// Bootstrap Overrides
@import "overrides.less";

// Theme Mixins
@import "mixins.less";

// Inspira Font Family
@import "inspira.less";

// Meta-Serif Font Family
@import "meta-serif.less";

// Navigation Components
@import "navbar.less";

// Modules
@import "module.less";

// Filter Tray
@import "filtertray.less";

// jScrollPane
@import "jscrollpane.less";


// MODULE IMPORTS
// -------------------------

// Add Widget
@import "modules/add-widget.less";

// Charting Components
@import "modules/highcharts.less";

// Data Visualization
@import "modules/data-viz.less";

// Notifications
@import "modules/notifications.less";

// Notifications
@import "modules/snapshot.less";

// GLOBAL STYLES
// -------------------------

// Alerts
.alert-fixed-top {
	.border-radius(0 0 @btnBorderRadius @btnBorderRadius);
	left: 15%;
	position: fixed;
	right: 15%;
	top: 0;
	z-index: @zindexFixedNavbar + 1;
	&.in {
		z-index: @zindexFixedNavbar + 2;
	}
}

// Groups
.group {
	.clearfix();
}

// Buttons
.btn-icon {
	font-size: @baseFontSize;
	+ .dropdown-toggle {
		padding-top: 7px;
		padding-bottom: 6px;
	}
}
.btn-filter {
	.btn:not(.btn-remove) [class^="icon-"]:first-child,
	.btn:not(.btn-remove) [class*=" icon-"]:first-child {
		margin-right: 5px;
	}
	.btn-remove {
		margin-left: -2px;
	}
}	
.btn-remove {
	padding-left: 7px;
	padding-right: 7px;
	[class^="icon-"],
	[class*=" icon-"] {
		.opacity(30);
	}
	&:hover [class^="icon-"],
	&:hover [class*=" icon-"] {
		.opacity(100);
	}
}
.btn.selected {
	background-color: @blue;
	border-color: @blue;
	color: @white;
}

// Button Groups
.btn-group {
	.btn-icon {
		// Special size/spacing for icon-only button groups using FontAwesome.
		// <a href="#" class="btn btn-icon" rel="tooltip" title="Add"><i class="icon-plus"></i></a>
		border-width: 0;
		font-size: 20px;
		line-height: 1;
		margin-left: -1px;
		padding: 8px 10px 6px;
		&:first-child {
			margin-left: 0;
		}
		&:hover {
			background-color: @athensgray;
			color: @grayDarker;
		}
		&.active,
		&:active {
			color: @black;
		}
		&.dropdown-toggle {
			padding-top: 2px;
			padding-bottom: 3px;
			[class^="icon-"],
			[class*=" icon-"] {
				font-size: 18px;
				vertical-align: middle;
			}
			[class^="icon-chevron-"],
			[class*=" icon-chevron-"] {
				font-size: 12px;
			}
		}
	}
	.btn-icon-like {
		font-weight:bold;
		font-size: 12px;
		line-height: 1;
		padding: 12px 10px 11px;

		&.active{
			background-color: @blue;
			color: @white;
		}	
	}	
	+ .btn-group { margin-left: 10px; }
}
.btn-toolbar,
.btn-group {
	.btn.selected {
		// Set the selected states of toolbar buttons to be blue with white text.
		background-color: @blue;
		.box-shadow(~"none");
		color: @white;
		&:hover {
			border-color: @blue;
		}
	}
}

// Colors
.bgcolor {
	&-primary { 
		background-color: @btnPrimaryBackground; 
		border-color: @btnPrimaryBackground;
		color: @white; 
	}
	&-success { 
		background-color: @btnSuccessBackground; 
		border-color: @btnSuccessBackground;
		color: @white; 
	}
	&-info { 
		background-color: @btnInfoBackground; 
		border-color: @btnInfoBackground;
		color: @white; 
	}
	&-warning { 
		background-color: @btnWarningBackground; 
		border-color: @btnInfoBackground;
		color: @white; 
	}
	&-danger { 
		background-color: @btnDangerBackground; 
		border-color: @btnDangerBackground;
		color: @white;
	}
	&-inverse { 
		background-color: @grayLighter; 
		border-color: @btnBorder;
		color: @textColor; 
	}
}
.color {
	&-black,
	&-primary	{ color: @textColor; }
	&-green,
	&-success	{ color: @successText; }
	&-cyan,
	&-info		{ color: @infoText; }
	&-orange,
	&-warning	{ color: @warningText; }
	&-red,
	&-danger	{ color: @errorText; }
	&-purple	{ color: @purple; }
	&-white,
	&-inverse	{ color: @white; }
}

// Filter
.filter-controls .btn-group {
	display: inline-block;
}
.filter-utilities .btn-group,
.filter-utilities .form-search {
	float: left;
}
.filter-controls {
	font-size: 0;
	float: left;
	margin-top: 15px;
}
.filter-utilities {
	margin-top: 15px;
}
.filter-utilities .form-search {
	margin-bottom: 15px;
}
.tray.in ~ .filter-controls,
.tray.in ~ .filter-utilities {
	margin-top: 2px;
}
.filter-actions {
	margin-top: 15px;
}

// Forms
.input-append {
	.btn-icon {
		border-left-width: 0;
		margin-left: -1px;
		position: relative;
		z-index: 2;
		@transition: border linear .2s;
		.transition(@transition);
	}
	textarea, 
	input[type="text"], 
	input[type="password"], 
	input[type="datetime"], 
	input[type="datetime-local"], 
	input[type="date"], 
	input[type="month"], 
	input[type="time"], 
	input[type="week"], 
	input[type="number"], 
	input[type="email"], 
	input[type="url"], 
	input[type="search"], 
	input[type="tel"], 
	input[type="color"], 
	.uneditable-input {
		&:focus {
			+ .btn-icon {
				border-color: @blue;
			}
		}
	}
}

// Secondary Navigation
.secondary-nav {
	// Prevent child LI space from being interpreted as margin.
	font-size: 0;
}
.secondary-nav > .nav-pills,
.secondary-nav > .btn-group {
	float: left;
	margin-bottom: 0;
	margin-left: @gridGutterWidth;
	.btn {
		// These can not be floated because of a wrapping bug in Chrome,
		// which can not be resolved using white-space: nowrap.
		float: none;
	}
}
.secondary-nav > .nav-pills > .btn-group {
	margin-left: 2px;
}

// Structured Lists
ul.structured,
ol.structured {
	margin-left: 0;
	list-style: none;
}
.structured li {
	border-top: 1px solid @grayLight;
	margin-top: 10px;
	padding-top: 10px;
	&:first-child:not(.nav-header) {
		border-top: 0;
		margin-top: 0;
		padding-top: 0;
	}
}

// Trays
.tray {
}
.module-body .tray {
	margin: -15px -15px 0;
}

// Voice
.voice {
	// Helper classes for applying "voice" to elements.
	&-brand {
		#voice > #family > .brand;
	}
	&-data {
		#voice > #family > .data;
	}
	&-human {
		#voice > #family > .human;
	}
	&-ui {
		#voice > #family > .ui;
	}
}


// RESPONSIVE IMPORTS
// -------------------------

// Add Widget
@import "../../base.responsive.less";


// RESPONSIVE OVERRIDES
// --------------------

// Landscape phone, small desktop and portait tablet
@media (max-width: 767px) {
	.page-header {
		// Change the page header to be vertical instead of horizontal.
		margin: 0;
		> h1 {
			// Make the page header block and give it a margin for spacing.
			display: block;
			margin-bottom: @gridGutterWidth;
		}
	}
	.secondary-nav {
		clear: both;
		float: none;
		text-align: left;
		.nav-pills {
			float: none;
			margin: 0 0 @gridGutterWidth;
			> li {
				.border-radius(0);
				display: block;
				float: none;
				margin-bottom: 1px;
				a {
					margin: 0;
				}
				&:first-child a {
					.border-radius(@btnBorderRadius @btnBorderRadius 0 0);
				}
				&:last-child a {
					.border-radius(0 0 @btnBorderRadius @btnBorderRadius);
				}
			}
		}
		.btn-group {
			float: right;
			margin: 0 0 @gridGutterWidth;
		}
	}
}

// Responsive navbar
@import "navbar.responsive.less";