// -------------------
// BOOTSTRAP OVERRIDES
// -------------------
//
// What should go here?
// 
// The overrides.less file is Grand Central for all the css that overrides Bootstrap.
// This allows you to keep the Bootstrap core up-to-date without losing your modifications. 
// 
// However, only LESS writeup which effects the whole of bootstrap should be directly written here.
// If instead you want to modify your current theme, modify the LESS in your theme's primary
// CSS file (e.g., classic.less).
//


// MIXINS
// -------------------------

// Button Background -- uses a solid color BG instead of gradients.
.buttonBackground(@startColor, @endColor) {
	background: @startColor;
	&:hover, &.disabled, &[disabled] {
		background: @endColor;
		border-color: @endColor;
	}
	&:active, &.active {
		background: darken(@startColor,15%);
		border-color: darken(@startColor,15%);
	}
}

// Form field states -- override the default focus color/effects.
.formFieldState(@textColor: @grayDarker, @borderColor: @btnBorder, @backgroundColor: @athensgray) {
	// Set the text color
	> label,
	.help-block,
	.help-inline {
		color: @textColor;
	}
	// Style inputs accordingly
	.checkbox,
	.radio,
	input,
	select,
	textarea {
		color: @textColor;
		border-color: @borderColor;
		&:focus,
		&.focused {
			border-color: darken(@borderColor, 10%);
			.box-shadow(~"none");
		}
	}
	// Give a small background color for input-prepend/-append
	.input-prepend .add-on,
	.input-append .add-on {
		color: @textColor;
		background-color: @backgroundColor;
		border-color: @textColor;
	}
}

// Form Placeholder -- need to adjust line-height for this item.
.placeholder(@color: @placeholderText) {
	&:-moz-placeholder {
		color: @color;
	}
	&:-ms-input-placeholder {
		color: @color;
	}
	&::-webkit-input-placeholder {
		color: @color;
		font-style: italic;
	}
}


// STYLES
// -------------------

// Accordion
.accordion {
	&.chromeless {
		margin: 0;
		.accordion-group {
			border: none;
		}
	}
}

.accordion-group {
	.border-radius(0);
	margin-bottom: 0;
	margin-top: -1px;
	&:first-child {
		.border-radius(@btnBorderRadius @btnBorderRadius 0 0);
		margin-top: 0;
	}
	&:last-child {
		.border-radius(0 0 @btnBorderRadius @btnBorderRadius);
	}
}
a.accordion-toggle {
	color: @textColor;
	[class^="icon-"],
	[class*=" icon-"] {
		margin-right: 6px;
		@transition: all linear .1s;
		.transition(@transition);
	}
	&:hover {
		color: @cello;
		[class^="icon-"],
		[class*=" icon-"] {
			text-decoration: none;
		}
	}
	&.in [class^="icon-"],
	&.in [class*=" icon-"] {
		.rotate(90deg);
	}
}
.accordion-inner {
	border-top-width: 0;
}

// Alerts
.alert {
	color: @white;
	text-shadow: none;
}
.alert .close {
	color: @white;
	font-weight: normal;
	line-height: 24px;
	.opacity(30);
	text-shadow: none;
	&:hover {
		.opacity(100);
	}
}
.alert .btn-small {
	position: relative;
	top: -1px;
}

// Blockquote
blockquote p {
	#voice > .human( 16px, normal, 20px );
	margin-bottom: 5px;
}
.voice-brand blockquote p,
blockquote.voice-brand p {
	#voice > .brand( 16px, normal, 20px );
}
blockquote small {
	color: @gray;
}

// Breadcrumb
.breadcrumb {
	background: transparent;
	border-width: 0;
	.box-shadow(none);
	font-size: @baseFontSize - 2;
	padding: 0;
	text-shadow: none;
}
.breadcrumb li {
	text-shadow: none;
}
.breadcrumb a {
	color: @textColor;
	&:hover {
		color: darken(@linkColor,15%);
	}
}
.breadcrumb .active {
	color: @linkColor;
}

// Buttons
.btn {
	// We have to specify backgrounds here to get the required hover/active states.
	// This requires us to redefine the colors below because of cascade.
	.buttonBackground(@btnBackground,@btnBackgroundHighlight);
	border-bottom-color: @btnBorder;
	.border-radius(@btnBorderRadius);
	font-size: @baseFontSize - 2;
	padding: 2px 10px;
	text-shadow: none;
	&:hover,
	&.active,
	&:active {
		border-color: @btnBorder;
	}
}
.btn-large {
	font-size: @baseFontSize;
	padding: 6px 12px;
}
.btn-small {
	font-size: @baseFontSize - 3;
}
.btn-mini {
	font-size: @baseFontSize - 4;
	line-height: 18px;
	padding: 0 5px;
	+ .dropdown-menu.pull-right {
		right: 12px;
	}
}
.btn,
.btn:hover,
.btn.active,
.btn:active,
.btn-group > .dropdown-toggle,
.btn-group.open .dropdown-toggle {
	.box-shadow(none); // Remove unwanted inset shadows.
	text-shadow: none;
}
.btn-group > .btn:last-child,
.btn-group > .dropdown-toggle {
	.border-radius(0 @btnBorderRadius @btnBorderRadius 0);
}
.btn-group > .btn:first-child {
     -webkit-border-top-left-radius: 3px;
         -moz-border-radius-topleft: 3px;
             border-top-left-radius: 3px;
  -webkit-border-bottom-left-radius: 3px;
      -moz-border-radius-bottomleft: 3px;
          border-bottom-left-radius: 3px;
}
.btn-primary {
	.buttonBackground(@btnPrimaryBackground, @btnPrimaryBackgroundHighlight);
	border-color: @btnPrimaryBackground;
}
.btn-warning {
	.buttonBackground(@btnWarningBackground, @btnWarningBackgroundHighlight);
	border-color: @btnWarningBackground;
}
.btn-danger {
	.buttonBackground(@btnDangerBackground, @btnDangerBackgroundHighlight);
	border-color: @btnDangerBackground;
}
.btn-success {
	.buttonBackground(@btnSuccessBackground, @btnSuccessBackgroundHighlight);
	border-color: @btnSuccessBackground;
}
.btn-info {
	.buttonBackground(@btnInfoBackground, @btnInfoBackgroundHighlight);
	border-color: @btnInfoBackground;
}
.btn-inverse,
.btn-inverse:hover,
.btn-inverse.active,
.btn-inverse:active {
	.buttonBackground(@btnInverseBackground, @btnInverseBackgroundHighlight);
	border-color: @btnBorder;
	color: @grayDarker; // By default inverse wants a dark background but ours is light, so...
	.caret {
		border-top-color: @black;
		border-bottom-color: @black;
		.opacity(30);
	}
}

// Carousel
.carousel-control {
	// Change the size of carousel controls to compensate for FontAwesome usage.
	font-size: 30px;
	line-height: 43px;
}

// Code
code,
pre {
	background-color: @athensgray;
	border-color: @btnBorder;
	.border-radius(@btnBorderRadius);
	font-size: @baseFontSize;
}

// Definition Lists
.dl-horizontal dt {
	margin-top: 1px;
	width: 33.3%;
}
.dl-horizontal dd {
	margin-left: 33.3%;
	padding-left: 10px;
}

// Dropdowns
.btn-group {
	&.open {
		.btn {
			// Remove the inset shadow on dropdowns.
			.box-shadow(~"none");
		}
	}
	// Give buttons appearing in groups a border, except accent colors.
	> .btn {
		margin-left: 1px;
		&:first-child {
			margin-left: 0;
		}
	}
	// Make split dropdowns have a gap between borders in accent colors only.
	> .dropdown-toggle {
		margin-left: -2px;
		&.btn-primary,
		&.btn-info,
		&.btn-warning,
		&.btn-success,
		&.btn-danger {
			margin-left: 1px;
		}
	}
	&[data-toggle] > .btn.active,
	&[data-toggle] > .btn:active {
		background-color: @blue;
		border-color: @blue;
		color: @white;
	}
	.btn + .dropdown-toggle + .dropdown-menu {
		// Adjust alignment to compensate for button toggle margins.
		margin-right: 2px;
	}
}
.btn-toolbar .btn.selected {
	border-color: @linkColor;
}
.caret {
	// Override caret border and width styles so we can use FontAwesome chevron icon.
	// We need to leave space for where the icon would have been to maintain alignment.
	border-width: 0;
	content: "";
	display: inline-block;
	width: 8px;
	vertical-align: top;
	&:before {
		// FontAwesome is structed in a way that doesn't really allow us to use their
		// classes as mixins, so we're reproducing it a bit here to get the chevron.
		content: "\f078";
		display: inline-block;
		font-family: FontAwesome;
		font-weight: normal;
		font-style: normal;
		margin-left: -1px;
		text-decoration: inherit;
	}
}
.btn {
	// Create some spacing for the caret on button dropdown, but
	// override it to be 0 on the split dropdown buttons.
	.caret {
		margin-top: 0;
		margin-left: 8px;
	}
	+ .btn {
		.caret {
			margin-left: 0;
		}
	}
}
.dropdown-menu {
	border-color: @grayLight;
	.border-radius(@btnBorderRadius);
	.box-shadow(~"none");
	font-size: @baseFontSize - 2;
	min-width: 0;
	.divider {
		margin-bottom: 3px;
		margin-top: 3px;
	}
}

// Forms
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
	// Typography overrides.
	color: @grayDark;
	font-size: @baseFontSize - 2;
	line-height: 1; // Centers input placeholders vertically.
	margin-bottom: 10px;
	padding: 2px 4px;
	+ .help-inline {
		margin-bottom: 10px;
	}
}
.uneditable-input {
	// This should be the base, not 1, since it's not a true component
	// and will not center correctly without it.
	line-height: @baseLineHeight;
}
textarea, 
input[type="text"], 
input[type="password"], 
input[type="datetime"], 
input[type="datetime-local"], 
input[type="date"], 
input[type="month"], 
input[type="time"], 
input[type="week"], 
input[type="number"], 
input[type="email"], 
input[type="url"], 
input[type="search"], 
input[type="tel"], 
input[type="color"], 
.uneditable-input {
	// All other overrides (excludes SELECT per Bootstrap convention).
	// Remove inset shadow on form controls and set background.
	.box-shadow(~"none");
	&:focus,
	&.focused {
		border-color: @blue;
		.box-shadow(~"none");
	}
}
select:focus,
select.focused {
	border: 1px solid @blue;
	outline: none;
}
label {
	margin-bottom: 10px;
}
.input-prepend,
.input-append {
	.add-on {
		// Remove background and shadow from form control add-ons.
		background-color: @athensgray;
		border-color: @btnBorder;
		color: @gray;
		font-size: @baseFontSize - 2;
		padding-top: 2px;
		padding-bottom: 2px;
		text-shadow: none;
	}
	input {
		margin-bottom: 0;
	}
}
.form-horizontal .control-group {
	margin-bottom: 0;
}
.form-inline .btn,
.form-inline .uneditable-input,
.form-horizontal .uneditable-input,
.form-search .uneditable-input {
	margin-bottom: 10px;
}

// Headings
h1 {
	font-size: @baseFontSize + 22; // 36px
}
h2 {
	font-size: @baseFontSize + 10; // 24px
}
h3 {
	font-size: @baseFontSize + 4; // 18px
}
.page-header {
	border-bottom: 0;
	font-size: @baseFontSize + 12;
	margin: 0 0 @gridGutterWidth;
	padding-bottom: 0;
	text-align: right;
	.clearfix();
	> h1 {
		font-size: inherit;
		line-height: 35px;
		text-align: left;
		small {
			color: @gray;
			margin-left: 5px;
		}
	}
	.btn-group {
		// Button groups in the header are icons and need white backgrounds,
		// not the standard button group porcelain background.
		.btn {
			background-color: @white;
			&:hover {
				background-color: @porcelain;
			}
			&.active,
			&:active {
				background-color: darken(@white,15%);
			}
		}
	}
}

// Grid
div[class*="span"],
section[class*="span"] {
	margin-bottom: @gridGutterWidth;
}

// Icons -- Use Font-Awesome instead of native BS image sprite.
[class^="icon-"],
[class*=" icon-"] {
	display: inline-block;
	width: auto;
	height: auto;
	background-image: none;
	background-position: 0;
	background-repeat: no-repeat;
	line-height: normal;
	vertical-align: baseline;
}
.icon-white {
  background-image: none;
}
@import "../../../../libs/Font-Awesome/less/font-awesome.less";
@fontAwesomePath: '../../../fonts'; // override font-awesome path

// Labels & Badges
.label,
.badge {
	background-color: @btnPrimaryBackground;
	.border-radius(0);
	display: inline-block;
	font-size: @baseFontSize - 4;
	line-height: @baseFontSize - 7;
	padding: 6px 4px;
	text-shadow: none;
	text-transform: uppercase;
	&-important,
	&-important[href] { 
		background-color: @errorText;
	}
	&-warning,
	&-warning[href] { 
		background-color: @orange;
	}
	&-success,
	&-success[href] { 
		background-color: @successText; 
	}
	&-info,
	&-info[href] { 
		background-color: @infoText; 
	}
	&-inverse,
	&-inverse[href] { 
		background-color: @btnBackground;
		border: 1px solid @grayLighter;
		color: @grayDarker;
	}
}
.badge {
	padding: 6px;
}

// Navigation Components
.nav-pills {
	> li > a {
		background-color: @white;
		.border-radius(0);
		color: @textColor;
		font-size: @baseFontSize - 2;
		line-height: 27px;
		margin: 0 1px 0 0;
		padding: 4px 10px;
		[class^="icon-"],
		[class*=" icon-"] {
			color: @grayDark;
		}
		&:hover {
			background-color: @porcelain;
			[class^="icon-"],
			[class*=" icon-"] {
				color: @grayDarker;
			}
		}
	}
	> li:first-child > a {
		.border-radius(@btnBorderRadius 0 0 @btnBorderRadius);
	}
	> li:last-child > a {
		.border-radius(0 @btnBorderRadius @btnBorderRadius 0);
	}
	&.nav-stacked > li:first-child > a {
		.border-radius( @btnBorderRadius @btnBorderRadius 0 0 );
	}
	&.nav-stacked > li:last-child > a {
		.border-radius( 0 0 @btnBorderRadius @btnBorderRadius );
	}
	> li.open > a > [class^="icon-"],
	> li.open > a > [class*=" icon-"] {
		color: @white;
	}
}
.nav-pills .dropdown-menu {
	.border-radius(@btnBorderRadius);
}
.nav-pills.nav-stacked > li > a {
	margin-bottom: 1px;
}
.nav-tabs {
	> li > a {
		color: @textColor;
		font-size: @baseFontSize - 2;
		line-height: 26px;
		padding: 4px 10px;
		[class^="icon-"],
		[class*=" icon-"] {
			color: @grayDark;
		}
		&:hover {
			background-color: @porcelain;
			[class^="icon-"],
			[class*=" icon-"] {
				color: @grayDarker;
			}
		}
	}
	> li.active > a,
	> li.active > a:hover {
		color: @linkColor;
	}
	> li.open > a > [class^="icon-"],
	> li.open > a > [class*=" icon-"] {
		color: @white;
	}
}
.nav-pills > li.open > a,
.nav-tabs > li.open > a {
	background-color: @porcelain;
	[class^="icon-"],
	[class*=" icon-"] {
		color: @textColor;
	}
}
.nav-list {
	background-color: @porcelain;
	a {
		color: @textColor;
		font-size: @baseFontSize - 2;
		text-shadow: none;
		&:hover {
			background-color: @porcelain;
		}
	}
	.divider {
		height: 0;
		margin: 9px -15px;
	}
	.nav-header {
		text-shadow: none;
		white-space: nowrap;
	}
}
.nav .nav-header {
	text-shadow: none;
}
.navbar-inner {
	filter: none; // Fixes an issue in IE8
}

// Modal
.modal {
	border-color: @grayLight;
	.border-radius(@btnBorderRadius);
	.box-shadow(~"none");
}
.modal-header {
	background-color: @porcelain;
	border-width: 0;
	.border-radius(3px 3px 0 0);
	#voice > #family > .brand;
	line-height: 1;
	padding: 15px;
	> * {
		line-height: inherit;
	}
}
.modal-footer {
	background-color: transparent;
	border-top: 1px solid @btnBorder;
	padding: 15px;
}

// Pagination
.pagination {
	a {
		background-color: @white;
		border-color: @btnBorder;
		color: @grayDark;
		font-size: @baseFontSize - 2;
		line-height: 20px;
		padding: 4px 10px;
		&:hover {
			background-color: @porcelain;
		}
	}
	.active {
		a {
			background-color: @blue;
			color: @white;
			border-color: @blue;
		}
	}
	.prev:not(.disabled) a,
	.next:not(.disabled) a {
		[class^="icon-"],
		[class*=" icon-"] {
			.opacity(30);
		}
		&:hover [class^="icon-"],
		&:hover [class*=" icon-"],
		&:active [class^="icon-"],
		&:active [class*=" icon-"] {
			.opacity(100);
		}
	}
}

// Pager
.pager {
	a {
		border-color: @btnBorder;
		.border-radius(@btnBorderRadius);
		color: @grayDark;
		font-size: @baseFontSize - 2;
		line-height: 26px;
		line-height: 20px;
		padding: 4px 10px;
		&:hover {
			background-color: @porcelain;
		}
	}
}

// Popovers
.popover {
	&.left .arrow   { border-left-color:   @grayLight; }
	&.bottom .arrow { border-bottom-color: @grayLight; }
	&.right .arrow  { border-right-color:  @grayLight; }
	&.top .arrow    { border-top-color:    @grayLight; }
}
.popover-inner {
	background: @grayLight;
	.border-radius(@btnBorderRadius);
	.box-shadow(~"none");
	padding: 1px;
}
.popover-title {
	background-color: @porcelain;
	border-width: 0;
	#voice > #family > .brand;
}

// Progress Bar
.progress {
	background: @porcelain;
	.border-radius(@btnBorderRadius);
	.box-shadow(~"none");
	.bar {
		background: @blue;
		.box-shadow(~"none");
	}
	+ .progress-status {
		color: @blue;
		font-size: @baseFontSize - 2;
		margin-top: -15px;
	}
}
.progress-striped {
	.bar {
		#gradient > .striped(@blue);
	}
}
.progress-danger {
	.bar {
	  background: @btnDangerBackground;
	}
	&.progress-striped .bar {
	  #gradient > .striped(@btnDangerBackground);
	}
	+ .progress-status {
		color: @btnDangerBackground;
	}
}
.progress-success {
	.bar {
	  background: @btnSuccessBackground;
	}
	&.progress-striped .bar {
	  #gradient > .striped(@btnSuccessBackground);
	}
	+ .progress-status {
		color: @btnSuccessBackground;
	}
}
.progress-info {
	.bar {
		background: @btnInfoBackground;
	}
	&.progress-striped .bar {
	  #gradient > .striped(@btnInfoBackground);
	}
	+ .progress-status {
		color: @btnInfoBackground;
	}
}
.progress-warning {
	.bar {
	  background: @btnWarningBackground;
	}
	&.progress-striped .bar {
	  #gradient > .striped(@btnWarningBackground);
	}
	+ .progress-status {
		color: @btnWarningBackground;
	}
} 

// Tables
table,
.table-bordered {
	// Kill all border-radius settings!
	.border-radius(0);
	thead:first-child tr:first-child th:first-child,
	tbody:first-child tr:first-child td:first-child,
	thead:first-child tr:first-child th:last-child,
	tbody:first-child tr:first-child td:last-child,
	thead:last-child tr:last-child th:first-child,
	tbody:last-child tr:last-child td:first-child,
	thead:last-child tr:last-child th:last-child,
	tbody:last-child tr:last-child td:last-child {
		.border-radius(0);
	}
}
.table-bordered {
	border-width: 0;
	th:first-child,
	td:first-child {
		border-left-width: 0;
		&[rowspan]:not([rowspan=1]) {
			border-right: 1px solid @tableBorder;
			padding-right: 11px;
			position: relative;
			right: -1px;
		}
	}
}
th,
td {
	font-size: @baseFontSize - 2;
}
thead th {
	background-color: @mako;
	color: @white;
	font-weight: normal;
}

// Thumbnails
.thumbnail {
	background-color: @porcelain;
	border-width: 0;
	.border-radius(@btnBorderRadius);
	padding: 15px;
	.caption {
		h5 {
			font-size: @baseFontSize;
			margin: 10px 0 5px;
		}
		p {
			line-height: @baseLineHeight;
			&:last-child {
				margin-bottom: 0;
			}
		}
		padding: 0;
	}
}

// Tooltips
.tooltip {
	font-size: @baseFontSize - 2;
}
.tooltip-inner {
	.border-radius(@btnBorderRadius);
}

// Wells
.well {
	background-color: @porcelain;
	border-width: 0;
	.border-radius(@btnBorderRadius);
	.box-shadow(~"none");
}